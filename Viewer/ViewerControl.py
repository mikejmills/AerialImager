#!/usr/bin/env python
# -*- coding: utf-8 -*-
# generated by wxGlade 0.6.3 on Fri Jan 22 19:18:02 2010

import wx, socket, thread, re

#
# [ x, y, lat, lon, TargOrient, TargShape, TargColor, TargAlphas, AlphaColor, ImageName ]

target_num = 1

def CreateConnect():
    s = socket.socket(socket.AF_UNIX, socket.SOCK_STREAM)
    s.connect("/tmp/viewer_socket")
    return s


def ddtodms(dd):
    deg = 0
    min = 0
    sec = 0
    
    dd = abs(dd)
    
    deg = int(dd)
    dd = dd - float(deg)

    dd *= 60
    min = int(dd)
    dd = dd - float(min)

    dd *= 60
    sec = int(dd)
    dd = dd - float(sec)
    
    return (deg, min, sec)


def padding(i, slen):
    l = len(str(i))
    s = ""
    
    for x in range(slen - l):
        s += "0"
    
    s += str(i)
    return s


def convert_latlon(lat, lon):
    
    lats = ""
    lons = ""
    
    
    if lat < 0:
        lats += "S"
    else:
        lats += "N"
    
    
    if lon < 0:
        lons += "W"
    else:
        lons += "E"
    
    (deg, min, sec) = ddtodms(lat)
    lats += padding(deg, 2) + " " + padding(min, 2) + " " + padding(sec, 2)

    (deg, min, sec) = ddtodms(lon)
    lons += padding(deg, 3) + " " + padding(min, 2) + " " + padding(sec, 2)
    
    return (lats, lons)
    
    
def FillList(listbox, data):
    c = 0
    
    listbox.DeleteAllItems()

    for item in data:
        
        listbox.InsertStringItem(c, item[2])
        listbox.SetStringItem(c, 1, item[3])
        listbox.SetStringItem(c, 2, item[4])
        listbox.SetStringItem(c, 3, item[5])
        listbox.SetStringItem(c, 4, item[6])
        listbox.SetStringItem(c, 5, item[7])
        listbox.SetStringItem(c, 6, item[8])
        listbox.SetStringItem(c, 7, item[9])
#        listbox.SetStringItem(c, 8, item[10])
        c += 1
    
        

def FillBoxs(item, Torient, Tshape, Tcolor, Talpha, Acolor, Iname):
    Torient.SetValue(item[4])
    Tshape.SetValue(item[5])
    Tcolor.SetValue(item[6])
    Talpha.SetValue(item[7])
    Acolor.SetValue(item[8])
    Iname.SetValue(item[9])
    
    
def SaveBoxs(orig, Torient, Tshape, Tcolor, Talpha, Acolor, Iname):
    orig[4]  = Torient.GetValue()
    orig[5]  = Tshape.GetValue()
    orig[6]  = Tcolor.GetValue()
    orig[7]  = Talpha.GetValue()
    orig[8]  = Acolor.GetValue()
    orig[9] =  Iname.GetValue()
    
    
                        
# reading thread
def read_thread(sock, lock, listbox, flaglist, *args):

    
    r = re.compile("(-?\d+.?\d*):(-?\d+.?\d*):(-?\d+.?\d*):(-?\d+.?\d*)\n")
    
    while 1:
        data = sock.recv(256) # number of bytes defined in the C++ files

        m = r.match(data)
        
        if not m:
            continue
        
        (lat, lon) =  convert_latlon(float(m.group(3)), float(m.group(4)))
        
        
        datatup = [m.group(1), m.group(2), lat, lon, "", "", "", "", "", ""]
        
        lock.acquire()
        #.....................................................
        
        flaglist.append(datatup)
        
        FillList(listbox, flaglist)
        
        #.....................................................
        lock.release()
    
# begin wxGlade: extracode
# end wxGlade



class mainFrame(wx.Frame):
    
    
    def __init__(self, *args, **kwds):
        # begin wxGlade: mainFrame.__init__
        kwds["style"] = wx.DEFAULT_FRAME_STYLE
        wx.Frame.__init__(self, *args, **kwds)
        self.FlagList = wx.ListCtrl(self, -1, style=wx.LC_REPORT|wx.SUNKEN_BORDER)
        self.label_1 = wx.StaticText(self, -1, "Target Orientation")
        self.TargetOrient = wx.TextCtrl(self, -1, "")
        self.label_2 = wx.StaticText(self, -1, "Target Shape")
        self.TargetShape = wx.TextCtrl(self, -1, "")
        self.label_3 = wx.StaticText(self, -1, "Target Color")
        self.TargetColor = wx.TextCtrl(self, -1, "")
        self.label_4 = wx.StaticText(self, -1, "Target Alphas")
        self.TargetAlpha = wx.TextCtrl(self, -1, "")
        self.label_5 = wx.StaticText(self, -1, "Alpha Color")
        self.AlphaColor = wx.TextCtrl(self, -1, "")
        self.label_6 = wx.StaticText(self, -1, "Image Name")
        self.ImageName = wx.TextCtrl(self, -1, "")
        self.SaveBtn = wx.Button(self, -1, "Save Changes")
        self.ExportBtn = wx.Button(self, -1, "Export Targets")

        self.__set_properties()
        self.__do_layout()

        self.Bind(wx.EVT_LIST_ITEM_SELECTED, self.Jmpto, self.FlagList)
        self.Bind(wx.EVT_BUTTON, self.SaveEvt, self.SaveBtn)
        self.Bind(wx.EVT_BUTTON, self.ExportFile, self.ExportBtn)
        # end wxGlade
        
        
        # setup the flag list
        self.FlagList.InsertColumn(0, "Latitude")
        self.FlagList.InsertColumn(1, "Longitude")
        self.FlagList.InsertColumn(2, "Target Orient")
        self.FlagList.InsertColumn(3, "Target Shape")
        self.FlagList.InsertColumn(4, "Target Color")
        self.FlagList.InsertColumn(5, "Target Alphas")
        self.FlagList.InsertColumn(6, "Alpha Color")
        self.FlagList.InsertColumn(7, "Image Name")
        
        self.FlagList.SetColumnWidth(0, 100)
        self.FlagList.SetColumnWidth(1, 100)        
        
        # Targate data
        self.flagdata = []
        
        # setup connection
        self.conn = CreateConnect()
        self.list_lock = thread.allocate_lock()
        
        # start listening for data
        thread.start_new_thread(read_thread, (self.conn, self.list_lock, self.FlagList, self.flagdata))
        
            

    def __set_properties(self):
        # begin wxGlade: mainFrame.__set_properties
        self.SetTitle("Flags")
        self.SetSize((781, 604))
        self.TargetOrient.SetMinSize((210, 25))
        self.TargetShape.SetMinSize((210, 25))
        self.TargetColor.SetMinSize((210, 25))
        self.TargetAlpha.SetMinSize((210, 25))
        self.AlphaColor.SetMinSize((210, 25))
        self.ImageName.SetMinSize((210, 25))
        # end wxGlade

    def __do_layout(self):
        # begin wxGlade: mainFrame.__do_layout
        grid_sizer_2 = wx.FlexGridSizer(3, 1, 0, 0)
        grid_sizer_3 = wx.GridSizer(1, 3, 0, 0)
        grid_sizer_1 = wx.FlexGridSizer(6, 2, 0, 0)
        grid_sizer_2.Add(self.FlagList, 1, wx.EXPAND, 0)
        grid_sizer_1.Add(self.label_1, 0, wx.ADJUST_MINSIZE, 0)
        grid_sizer_1.Add(self.TargetOrient, 0, wx.ADJUST_MINSIZE, 0)
        grid_sizer_1.Add(self.label_2, 0, wx.ADJUST_MINSIZE, 0)
        grid_sizer_1.Add(self.TargetShape, 0, wx.ADJUST_MINSIZE, 0)
        grid_sizer_1.Add(self.label_3, 0, wx.ADJUST_MINSIZE, 0)
        grid_sizer_1.Add(self.TargetColor, 0, wx.ADJUST_MINSIZE, 0)
        grid_sizer_1.Add(self.label_4, 0, wx.ADJUST_MINSIZE, 0)
        grid_sizer_1.Add(self.TargetAlpha, 0, wx.ADJUST_MINSIZE, 0)
        grid_sizer_1.Add(self.label_5, 0, wx.ADJUST_MINSIZE, 0)
        grid_sizer_1.Add(self.AlphaColor, 0, wx.ADJUST_MINSIZE, 0)
        grid_sizer_1.Add(self.label_6, 0, wx.ADJUST_MINSIZE, 0)
        grid_sizer_1.Add(self.ImageName, 0, wx.ADJUST_MINSIZE, 0)
        grid_sizer_2.Add(grid_sizer_1, 1, wx.EXPAND, 0)
        grid_sizer_3.Add(self.SaveBtn, 0, wx.ADJUST_MINSIZE, 0)
        grid_sizer_3.Add(self.ExportBtn, 0, wx.EXPAND|wx.ADJUST_MINSIZE, 0)
        grid_sizer_2.Add(grid_sizer_3, 1, wx.EXPAND, 0)
        self.SetSizer(grid_sizer_2)
        grid_sizer_2.AddGrowableRow(0)
        grid_sizer_2.AddGrowableCol(0)
        self.Layout()
        # end wxGlade


    def Jmpto(self, event): # wxGlade: mainFrame.<event_handler>
        index = self.FlagList.GetFocusedItem()
        x = self.flagdata[index][0]
        y = self.flagdata[index][1]
         
        # form the expected string of x\0y (eg 3.14159\03.14159)
        self.conn.send(str(x) + "\0" + str(y))        
        
        FillBoxs(self.flagdata[index], self.TargetOrient, self.TargetShape, self.TargetColor, self.TargetAlpha, self.AlphaColor, self.ImageName)
        
    def SaveEvt(self, event): # wxGlade: mainFrame.<event_handler>
        SaveBoxs(self.flagdata[self.FlagList.GetFocusedItem()], self.TargetOrient, self.TargetShape, self.TargetColor, self.TargetAlpha, self.AlphaColor, self.ImageName)
        FillList(self.FlagList, self.flagdata)
        
        
        
            
    def EditText(self, event): # wxGlade: mainFrame.<event_handler>
        index = self.FlagList.GetFocusedItem()
        
        # No selected item
        if index < -1:
            return
        
        event.Skip()
        
        
    def ExportFile(self, event): # wxGlade: mainFrame.<event_handler>
        print "Saved file"
        num = 1
        f = open("./UAARG.txt", 'w')
        for item in self.flagdata:
            s = padding(str(num), 2) + "\t" + str(item[2]) + "\t" + str(item[3]) + "\t" + str(item[4]) + "\t" + str(item[5]) + "\t" + str(item[6]) + "\t" + str(item[7]) + "\t" + str(item[8]) + "\t" + str(item[9]) + "\n"
            f.write(s)
            num += 1
        f.close()
        
        event.Skip()

# end of class mainFrame


if __name__ == "__main__":
   
    app = wx.PySimpleApp(0)
    wx.InitAllImageHandlers()
    frame_1 = mainFrame(None, -1, "")
    app.SetTopWindow(frame_1)
    frame_1.Show()
    app.MainLoop()
